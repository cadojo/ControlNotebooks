var documenterSearchIndex = {"docs":
[{"location":"generated/Chapter 1: Dynamics/","page":"Chapter 1: Dynamics","title":"Chapter 1: Dynamics","text":"EditURL = \"https://github.com/cadojo/ControlTheoryNotes.jl/blob/master/src/Chapter 1: Dynamics.jl\"","category":"page"},{"location":"generated/Chapter 1: Dynamics/#Dynamics-and-Equations-of-Motion","page":"Chapter 1: Dynamics","title":"Dynamics and Equations of Motion","text":"","category":"section"},{"location":"generated/Chapter 1: Dynamics/","page":"Chapter 1: Dynamics","title":"Chapter 1: Dynamics","text":"How stuff moves!","category":"page"},{"location":"generated/Chapter 1: Dynamics/#Overview","page":"Chapter 1: Dynamics","title":"Overview","text":"","category":"section"},{"location":"generated/Chapter 1: Dynamics/","page":"Chapter 1: Dynamics","title":"Chapter 1: Dynamics","text":"Our end goal as controls engineers is to affect a system in some desired way. To do this, we'll need a mathematical description of our system. This mathematical description is known as a model. There's a famous quote about mathematical models: \"all models are wrong, but some are useful\".","category":"page"},{"location":"generated/Chapter 1: Dynamics/","page":"Chapter 1: Dynamics","title":"Chapter 1: Dynamics","text":"This is really important. We are always approximating our system by describing it with a model. The question we need to ask is \"is our approximate description of our system (our model) good enough?\"","category":"page"},{"location":"generated/Chapter 1: Dynamics/","page":"Chapter 1: Dynamics","title":"Chapter 1: Dynamics","text":"note: Definitions\nModel - a mathematical description of a system","category":"page"},{"location":"generated/Chapter 1: Dynamics/","page":"Chapter 1: Dynamics","title":"Chapter 1: Dynamics","text":"But what does this model look like? To answer this question, let's first discuss system dynamics, and equations of motion.","category":"page"},{"location":"generated/Chapter 1: Dynamics/#Dynamics","page":"Chapter 1: Dynamics","title":"Dynamics","text":"","category":"section"},{"location":"generated/Chapter 1: Dynamics/","page":"Chapter 1: Dynamics","title":"Chapter 1: Dynamics","text":"If we want to affect a system, then by definition, the system should be affect-able (is that a word?) by external forces. These \"forces\" don't necessarily need to be physical forces: consider the affect of introducing new predators in an ecosystem with the goal of affecting predator-prey populations.","category":"page"},{"location":"generated/Chapter 1: Dynamics/","page":"Chapter 1: Dynamics","title":"Chapter 1: Dynamics","text":"So we have a mathematical description, and we know we'll need some changing parameter to affect the mathematical description. Sounds like we need equations! The equations that govern our system are often called equations of motion. Any system that changes due to some external \"force\" is known as a dynamical system by definition.","category":"page"},{"location":"generated/Chapter 1: Dynamics/","page":"Chapter 1: Dynamics","title":"Chapter 1: Dynamics","text":"The first step to any controls problem is identifying the dynamics; this usually means defining the equations of motion for our system. A set of equations of motion which describe our dynamical system is our model.","category":"page"},{"location":"generated/Chapter 1: Dynamics/#Model-Example","page":"Chapter 1: Dynamics","title":"Model Example","text":"","category":"section"},{"location":"generated/Chapter 1: Dynamics/","page":"Chapter 1: Dynamics","title":"Chapter 1: Dynamics","text":"A really common system in engineering is known as the spring-mass-damper. We can roughly describe this system as a block on a table, which is connected to a spring. We can force (a.k.a. affect) this system by pulling on the block to extend or compress the spring.","category":"page"},{"location":"generated/Chapter 1: Dynamics/#Model-Construction","page":"Chapter 1: Dynamics","title":"Model Construction","text":"","category":"section"},{"location":"generated/Chapter 1: Dynamics/","page":"Chapter 1: Dynamics","title":"Chapter 1: Dynamics","text":"Let's figure out our equations of motion. The following question is usually a useful starting point: \"what are the forces on our system?\" We know we'll have one external force: us pulling or pushing on the block! Let's call this external force f_e. We'll also have a force due to the spring, and a force due to the friction between the block and the table. The force due to the spring will be proportional to the position of the block with respect to the spring's neutral position: let's call the spring constant k. The force due to friction will be proportional to the velocity of the block (let's forget about static friction for now): let's call the coefficient of friction d.","category":"page"},{"location":"generated/Chapter 1: Dynamics/","page":"Chapter 1: Dynamics","title":"Chapter 1: Dynamics","text":"With all of the forces identified, we can start constructing the eqautions of motion for this system. If we call our block's position x, then the acceleration ddotx will be equal to the sum of our external force f_e, the spring force k x, and the force due to friction d dotx. Summing these forces produces the following (common) spring-mass-damper equation, where m is the mass of the block.","category":"page"},{"location":"generated/Chapter 1: Dynamics/","page":"Chapter 1: Dynamics","title":"Chapter 1: Dynamics","text":"beginequation f_e = m ddotx + d dotx + k x endequation","category":"page"},{"location":"generated/Chapter 1: Dynamics/","page":"Chapter 1: Dynamics","title":"Chapter 1: Dynamics","text":"We have our model! This is a second-order differential equation. It helps to divide all variables into two groups: parameters, and states. States describe the system at some point in time. In this case, state variables answer the following questions: \"where is the block, what is the velocity of the block, and what is the acceleration of the block?\" One set of valid state variables for this system is x and dotx; we don't need to include ddotx in our list of state variables because we can calculate ddotx from x and dotx.","category":"page"},{"location":"generated/Chapter 1: Dynamics/","page":"Chapter 1: Dynamics","title":"Chapter 1: Dynamics","text":"note: Note\n","category":"page"},{"location":"generated/Chapter 1: Dynamics/","page":"Chapter 1: Dynamics","title":"Chapter 1: Dynamics","text":"We say \"one set of state variables\" because there may (and nearly always are)   other valid state representations that could completely describe this system!   State variables are not unique.","category":"page"},{"location":"generated/Chapter 1: Dynamics/","page":"Chapter 1: Dynamics","title":"Chapter 1: Dynamics","text":"If we leave states as symbolic, and then look to the equation(s) of motion of a system, the parameters describe a specific instance of a system. Put another way, no matter what values f_e, d, and k take, this equation of motion is identifiable as a spring-mass-damper. For this reason, we can specify f_e, d, and k as parameters. We can assume a unit mass for the block for now.","category":"page"},{"location":"generated/Chapter 1: Dynamics/","page":"Chapter 1: Dynamics","title":"Chapter 1: Dynamics","text":"note: Note\n","category":"page"},{"location":"generated/Chapter 1: Dynamics/","page":"Chapter 1: Dynamics","title":"Chapter 1: Dynamics","text":"The parameter f_e is our control parameter in this example, because we can change f_e   to affect our system. For now, let's not differentiate between control parameters and   non-control parameters.","category":"page"},{"location":"generated/Chapter 1: Dynamics/#Coding-our-Model","page":"Chapter 1: Dynamics","title":"Coding our Model","text":"","category":"section"},{"location":"generated/Chapter 1: Dynamics/","page":"Chapter 1: Dynamics","title":"Chapter 1: Dynamics","text":"We can simulate these dynamics with Julia's DifferentialEquations package. If you're familiar with MATLAB, DifferentialEquations provides numerical integration solvers that are similar to MATLAB's ode45 (and similar) solvers. We can use the ModelingToolkit package to conveniently put our model to code, and interface with DifferentialEquations for simulation.","category":"page"},{"location":"generated/Chapter 1: Dynamics/","page":"Chapter 1: Dynamics","title":"Chapter 1: Dynamics","text":"using ModelingToolkit\nusing DifferentialEquations\n\n@parameters t fₑ d k\n@variables x(t)\nδ = Differential(t)\n\neqs = [\n    δ(δ(x)) + d*δ(x) + k*x ~ fₑ\n] .|> simplify\n\nmodel = (ode_order_lowering ∘ ODESystem)(eqs, t, [x], [fₑ, d, k])","category":"page"},{"location":"generated/Chapter 1: Dynamics/#Simulating-our-Model","page":"Chapter 1: Dynamics","title":"Simulating our Model","text":"","category":"section"},{"location":"generated/Chapter 1: Dynamics/","page":"Chapter 1: Dynamics","title":"Chapter 1: Dynamics","text":"With model defined above, we can use DifferentialEquations to simulate our system. Of course, to do this we'll need to specify numerical values for our parameters, and initial conditions (the simulation starting point) for our state variables. The code below specifies some arbitrary initial conditions and constant parameter values, and simulates the resulting dynamics.","category":"page"},{"location":"generated/Chapter 1: Dynamics/","page":"Chapter 1: Dynamics","title":"Chapter 1: Dynamics","text":"problem = let x₀ = 0.1, ẋ₀ = 0.0, dₙ = 0.5, kₙ = 0.9, mₙ = 5.0, fₙ = 10.0, Δt = 10.0\n    ODEProblem(\n        model,\n        [x => x₀],\n        (0.0, Δt),\n        [d => dₙ, k => kₙ, m => mₙ, fₑ => fₙ]\n    )\nend\n\nsolutions = solve(problem, Tsit5(); reltol = 1e-12, abstol = 1e-12)\n\nplot(solutions; title = \"Spring Mass Damper Simulation\")","category":"page"},{"location":"generated/Chapter 1: Dynamics/","page":"Chapter 1: Dynamics","title":"Chapter 1: Dynamics","text":"","category":"page"},{"location":"generated/Chapter 1: Dynamics/","page":"Chapter 1: Dynamics","title":"Chapter 1: Dynamics","text":"This page was generated using Literate.jl.","category":"page"},{"location":"#Control-Theory-Notes","page":"Introduction","title":"🎢 Control Theory Notes","text":"","category":"section"},{"location":"","page":"Introduction","title":"Introduction","text":"Fundamental control theory concepts, and applications with a (rough) approximation of an aircraft model!","category":"page"},{"location":"#Overview","page":"Introduction","title":"Overview","text":"","category":"section"},{"location":"","page":"Introduction","title":"Introduction","text":"Control theory is hard! Lots of analysis is nuanced, and it's pretty easy to fall into incorrect assumptions and incomplete understanding. That's where this refresher comes in. We'll cover basic definitions through multi-input multi-output linear analysis, and everything in between. These notes are available as a  website, and via  PDF.  If you have any questions, suggestions, or corrections, always feel free to email the author (Joe Carpinelli) at jdcarpinelli@gmail.com.","category":"page"},{"location":"#Goals","page":"Introduction","title":"Goals","text":"","category":"section"},{"location":"","page":"Introduction","title":"Introduction","text":"Introduce control theory\nDefine common industry terms\nOutline the rest of this note-set!","category":"page"},{"location":"#What-is-Control-Theory?","page":"Introduction","title":"What is Control Theory?","text":"","category":"section"},{"location":"","page":"Introduction","title":"Introduction","text":"Our world is filled with human-made, and natural systems. We can model each system with equations of motion. These equations describe how each system's state changes! A quick definition for state is described below. We often want to control the state in some way. Think about the populations of predators and prey in an ecosystem, inflation rates in an economy, the orientation of a rocket, the speed of a car, etc.","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"note: Definitions\nState – a set of values that completely describe a system!","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"Over the years, smart people have developed a field known as controls. Control theory is a broad term which includes...","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"the math used to describe systems you'd like to control\nthe analysis tools you use to see how well your system behaves\nthe strategies for developing controllers\nmore stuff like this!","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"We'll need a few more definitions before we really get started. ","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"note: Definitions\nPlant – the system you'd like to control (a car, a rocket, etc.)\nInput - parameter values in your equations which you can change to influence your system's state (often a force or a device which produces a force for physical systems)\nModel - the equations you've been given, or you've chosen which represent your system (model is synonymous with equations of motion)\nDynamics - math (equations) which descibe how a system's state changes due to external forces\nControl Law - an equation which describes how you change your input values (this is set by you, the controls engineer!)\nPerformance – how well your controller controls your system (how fast does the system move towards your desired state values, is your controller robust to perturbations and noise, etc.)","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"We'll walk through common control theory concepts and strategies in this note-set. It helps to have a concrete example for a system to control, so let's use one! NASA has developed a model aircraft for research, and university researchers produced an approximated model to describe this aircraft. We will use this model throughout these notes. By working through these notes, you'll be learning to control (a very rough model of) an airplane!","category":"page"},{"location":"#What-System-are-we-Using?","page":"Introduction","title":"What System are we Using?","text":"","category":"section"},{"location":"","page":"Introduction","title":"Introduction","text":"NASA has developed a sub-scale model aircraft (think RC model plane) for flight controls research. This model is called the Generic Transport Model: GTM for short! You can learn more about this in an overview page, or by checking out the following video. ","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"University researchers (Chakraborty et al) used curve-fitting strategies to approximate the equations which describe airplane flight as low-order polynomials. Polynomial approximations for systems are valuable because computers can compute polynomials quickly! ","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"This approximate (read, ROUGH) model for GTM flight dynamics has been ported to Julia as the PolynomialGTM package. PolynomialGTM only exports one variable: GTM, a ModelingToolkit.ODESystem instance which includes the polynomial-approximated equations of motion for NASA's GTM. ","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"<iframe width=\"560\" src=\"https://www.youtube.com/embed/_3JSRvaTRIQ\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>","category":"page"},{"location":"#What's-Next?","page":"Introduction","title":"What's Next?","text":"","category":"section"},{"location":"","page":"Introduction","title":"Introduction","text":"Next, we'll look at nonlinear dynamics, and what these models look like.","category":"page"}]
}
